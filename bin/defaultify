#!/usr/bin/env node

var util = require('util'),
    Transform = require('stream').Transform;

util.inherits(DefaultExporter, Transform);

function DefaultExporter(oldNamespace, newNamespace) {
    this.oldNamespace = oldNamespace;
    this.newNamespace = newNamespace;
    Transform.call(this);
}

var firstChunkOnly = true

DefaultExporter.prototype._transform = function(chunk, encoding, done) {

    if(firstChunkOnly) {

        chunk = chunk.toString().replace(/^(!function\()([a-z])(\)\{)/, '$1_$2$3function $2(){return _$2()["default"]};');

        if(this.oldNamespace && this.newNamespace) {
            chunk = chunk.replace(this.oldNamespace, this.newNamespace);
        }

        firstChunkOnly = null;
    }

    done(null, chunk);

};

var defaultExporter = new DefaultExporter(process.argv[2], process.argv[3]);

process.stdin.pipe(defaultExporter).pipe(process.stdout);
